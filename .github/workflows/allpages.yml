name: Fetch YouTube Fandom Pages

on:
  # schedule:
  # - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  fetch-pages:
    runs-on: ubuntu-latest

    env:
      API_URL: "https://youtube.fandom.com/api.php"
      OUTPUT_FILE: "allpages.txt"
      API_PARAMS: "action=query&list=allpages&aplimit=50&format=json"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch and Save Pages
        run: |
          #!/bin/bash

          # Initialize variables
          CONTINUE=""
          PAGE_COUNT=0

          while [ -n "$CONTINUE" ] || [ $PAGE_COUNT -eq 0 ]; do
            # Construct the API request URL with the continuation token
            FULL_PARAMS="$API_PARAMS&$CONTINUE"
            API_REQUEST="$API_URL?$FULL_PARAMS"

            # Use curl to fetch data from the API endpoint and append it to the output file
            PAGE_TITLES=$(curl -s "$API_REQUEST" | jq '.query.allpages[].title')

            # Check if the API response is empty or contains an error
            if [ -z "$PAGE_TITLES" ] || [ "$PAGE_TITLES" == "null" ]; then
              echo "API response is empty or contains an error."
              exit 1
            fi

            echo "Fetched page batch $PAGE_COUNT"

            # Extract the continuation token from the JSON response
            CONTINUE=$(curl -s "$API_REQUEST" | jq -r '.continue.apcontinue')

            # Get the title of the last page in the batch
            LAST_PAGE=$(echo "$PAGE_TITLES" | tail -n 1)
            echo "Latest Page: $LAST_PAGE"

            PAGE_COUNT=$((PAGE_COUNT+1))
          done

          echo "Successfully fetched and saved all pages to $OUTPUT_FILE"


      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add "$OUTPUT_FILE"
          git commit -m "Update $OUTPUT_FILE"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
